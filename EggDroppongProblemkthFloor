int solve(int e , int f) {
      if (e==0) { return 0;}
      if (e==1) { return f;}
      if ( f==0 || f==1) { return f;}
      int min = Integer.MAX_Value;
      for (int k=1;k<=f;k++) {
           int temp  = 1+Math.max(solve(e-1,k-1),solve(e,f-k));
            min = Math.min(temp, min);
            }
            return min;
       }
       
       int[] t [] =  t[e+1] [f+1] ;
       
      if (e==0) { return 0;}
      if (e==1) { return f;}
      if (f==0 || f==1) { return f;}
      if (t[e][f]!=-1) {
         return t[e][f];
         }
      int min = Integer.MAX_Value;
      for (int k=1;k<=f;k++) {
           int low;
            if (t[e-1][k-1]!=-1){
             low = t[e-1][k-1];
             }
             else {
             low = solve(e-1,k-1);
             t[e-1][k-1] = low;
             }
             
            int high;
            if (t[e][f-k]!=-1){
              high = t[e-1][f-k];
             }
             else {
             high = solve(e-1,f-k);
             t[e-1][f-k] = high;
             }
              int temp  = 1+Math.max(low,high);
         //  int temp  = 1+Math.max(solve(e-1,k-1),solve(e,f-k));
            min = Math.min(temp, min);
            }
            t[e][f] = min;
            return min;
       }
